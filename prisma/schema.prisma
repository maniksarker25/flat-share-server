// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @unique @default(uuid())
  username    String
  email       String       @unique
  status      UserStatus   @default(ACTIVE)
  role        UserRole     @default(USER)
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userProfile UserProfile?
  booking     Booking[]

  @@map("users")
}

model UserProfile {
  id         String   @id @unique @default(uuid())
  userId     String   @unique
  bio        String
  profession String
  address    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])

  @@map("userProfiles")
}

model Flat {
  id                  String    @id @unique @default(uuid())
  squareFeet          Int
  totalBedrooms       Int
  totalRooms          Int
  detailedDescription String
  amenities           String
  location            String
  rentAmount          Int
  advancedAmount      Int
  photos              String[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  booking             Booking[]

  @@map("flats")
}

model Booking {
  id        String        @id @unique @default(uuid())
  flatId    String
  userId    String
  status    BookingStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  flat Flat @relation(fields: [flatId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

enum BookingStatus {
  PENDING
  BOOKED
  REJECTED
}

enum UserStatus {
  ACTIVE
  DEACTIVATE
}

enum UserRole {
  USER
  ADMIN
}
